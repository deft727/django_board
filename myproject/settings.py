"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
from django.contrib.messages import constants as message_constants
from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-vg+!!0!7$+!!#n$ezttr=7-aq71ikszh)!oorppt58gmuqqsml'
#  str(os.environ.get("SECRET_KEY"))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True 
# bool(int(os.environ.get("DEBUG", default=1)))

ALLOWED_HOSTS = ['*']
# os.environ.get("DJANGO_ALLOWED_HOSTS")



CELERY_TIMEZONE = "Europe/Kiev"
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60
CELERY_BROKER_URL = 'amqp://localhost'
# 'redis://localhost:6370/0'

MESSAGE_LEVEL = message_constants.DEBUG
MESSAGE_LEVEL = 10

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'widget_tweaks',
    'crispy_forms',
    'accounts',
    'boards',
    'psycopg2',
    'faker',
    'smartfields',

    'snowpenguin.django.recaptcha2',
    'simple_history',
    'django.contrib.sites',
    'django.contrib.flatpages',
    'social_django',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
    
]

ROOT_URLCONF = 'myproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
                 os.path.join(BASE_DIR, 'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
                
            ],
        },
    },
]

WSGI_APPLICATION = 'myproject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     "default": {
#         "ENGINE": os.environ.get("SQL_ENGINE", "django.db.backends.sqlite3"),
#         "NAME": os.environ.get("SQL_NAME", os.path.join(BASE_DIR, "db.sqlite3")),
#         "USER": os.environ.get("SQL_USER", "user"),
#         "PASSWORD": os.environ.get("SQL_PASSWORD", "devpass"),
#         "HOST": os.environ.get("SQL_HOST", "localhost"),
#         "PORT": os.environ.get("SQL_PORT", "5432"),
#     }
# }
# from django.contrib.auth.models import User
# from boards.models import Board, Topic, Post

# user = User.objects.first()

# board = Board.objects.create(name='Docker')

# for i in range(100):
#     subject = 'Topic test #{}'.format(i)
#     topic = Topic.objects.create(subject=subject, board=board, starter=user)
#     Post.objects.create(message='Lorem ipsum...', topic=topic, created_by=user)
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'prod_db',
#         'USER': 'admin',
#         'PASSWORD': 'devpass',
#         'HOST' : 'postgresdb',
#         'PORT' : 5432
#     }
# }

DATABASES = {'default':
    {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = (
    'social_core.backends.github.GithubOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.google.GoogleOAuth2',

    'django.contrib.auth.backends.ModelBackend',
)
# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/
SOCIAL_AUTH_PIPELINE = (
    'social.pipeline.social_auth.social_details',
    'social.pipeline.social_auth.social_uid',
    'social.pipeline.social_auth.auth_allowed',
    'social.pipeline.social_auth.social_user',
    'social.pipeline.user.get_username',
    'social.pipeline.user.create_user',
    'social.pipeline.social_auth.associate_user',
    'social.pipeline.social_auth.load_extra_data',
    'social.pipeline.user.user_details',
    'boards.utils.create_profile' 
)

LANGUAGE_CODE = 'en'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOGIN_REDIRECT_URL = 'home'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# STATIC_URL = '/static/'
# STATIC_DIR = os.path.join(BASE_DIR,'static')
# STATIC_ROOT = os.path.join(BASE_DIR,'static')
STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# STATIC_ROOT =  os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'media')

CRISPY_TEMPLATE_PACK = 'bootstrap4'

# django fotolog
# if DEBUG:
#     EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
LOGIN_REDIRECT_URL = 'my_account'

SITE_ID = 1

SOCIAL_AUTH_URL_NAMESPACE = 'social'
SOCIAL_AUTH_GITHUB_KEY = 'ac2c81b0f7e251748034'
SOCIAL_AUTH_GITHUB_SECRET = 'ac46faf76c240ec910fa0d52e2bcf51f2dd522c1'

SOCIAL_AUTH_FACEBOOK_KEY = '868434577098385'
SOCIAL_AUTH_FACEBOOK_SECRET = 'e2351fc2821ceefcb601b1e4794c9ef8'


SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '233025016839-029b0a3bsvuu5h97vccm6jdv10ung6hh.apps.googleusercontent.com'


SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = 'wPLtnBc7cQzmCVtMM9uV_CZN'


# '6LdgxMobAAAAAASmY81cQDAkI6rK8RXp5EYJZdXo'

GOOGLE_RECAPTCHA_SECRET_KEY ='6LfS2swbAAAAAJPp0Zu7zK23s__XlLukWvENo_gj'
RECAPTCHA_PRIVATE_KEY = '6LfS2swbAAAAAJPp0Zu7zK23s__XlLukWvENo_gj'
RECAPTCHA_PUBLIC_KEY = '6LfS2swbAAAAALsPWnB2GOlOBdQiqnXgn9H0Raq0'

ADMIN = 'test.blogodvich@gmail.com'

EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'test.blogodvich@gmail.com'
EMAIL_HOST_PASSWORD = 'Kirill99'
EMAIL_PORT = 587
EMAIL_HOST_PASSWORD ='nzsietbzmayagzfa'